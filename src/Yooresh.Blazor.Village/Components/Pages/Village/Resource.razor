@using Yooresh.Village.Models;
@using Yooresh.Village.Services
mode InteractiveServer
@implements IDisposable
@inject Services.IResourceServices _resourceServices;

<table class="resources">
    <tr>
        <td>
            @gold
        </td>
        <td>
            @lumber
        </td>
        <td>
            @stone
        </td>
        <td>
            @food
        </td>
    </tr>
</table>
<br />
<br />
<br />

@code {
    private int food = 0;
    private int lumber = 0;
    private int stone = 0;
    private int gold = 0;
    private List<Models.Resource> resources;

    System.Timers.Timer Timer;

    protected override async Task OnInitializedAsync()
    {
        resources = await _resourceServices.GetResources();
        

        Timer = new System.Timers.Timer(1000);
        Timer.Elapsed += TimerElapsed;
        Timer.AutoReset = true;
        Timer.Enabled = true;
    }

    private void Test()
    {
        food = 20;
    }

    private void TimerElapsed(object? sender, System.Timers.ElapsedEventArgs e)
    {       
        InvokeAsync(() =>
        {
            food++;
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        Timer?.Dispose();
    }
}
