@using Yooresh.Blazor.Village.Models;
@rendermode InteractiveServer
@inject Services.IPlayerServices _playerServices;
@inject NavigationManager _navManager

<h3>SignUp</h3>
<EditForm Model="@SignUpDto" OnValidSubmit="@ValidSubmit">
    <DataAnnotationsValidator/>
    <div class="form-group">
        <label for="full-name" class="col-sm-2 col-form-label">
            Name :
        </label>
        <div class="col-sm-10">
            <InputText id="full-name" class="form-control" placeholder="Example: john"
                       @bind-Value="SignUpDto.Name" />
        </div>
        <ValidationMessage For="@(() => SignUpDto.Name)" />
    </div>
    <div class="form-group">
        <label for="email" class="col-sm-2 col-form-label">
            Email :
        </label>
        <div class="col-sm-10">
            <InputText id="email" class="form-control" placeholder="Example: myEmail@Domain.com"
                       @bind-Value="SignUpDto.Email" />
            <ValidationMessage For="@(() => SignUpDto.Email)" />
        </div>
    </div>
    <div class="form-group">
        <label for="password" class="col-sm-2 col-form-label">
            Password :
        </label>
        <div class="col-sm-10">
            <InputText id="password" class="form-control" @bind-Value="SignUpDto.Password" />
            <ValidationMessage For="@(() => SignUpDto.Password)" />
        </div>
    </div>
    <br/>
@*     @if (!string.IsNullOrWhiteSpace(Message))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Message
        </div>
    } *@
    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

@code {
    public Models.Players.SignUpDto SignUpDto { get; set; } = new();
    //public string Message { get; set; } = string.Empty;

    // protected async override Task OnInitializedAsync()
    // {
    //     Message = "This is a good message people";        
    // }

    private async Task ValidSubmit()
    {
        Models.Players.Player player = await _playerServices.SignUp(SignUpDto);        
        _navManager.NavigateTo("/counter");
    }
}
